Bootstrap: docker
From: nvidia/cuda:11.5.2-devel-ubuntu20.04


%labels
    Dataset Acquisition

%environment
    export QT_XCB_GL_INTEGRATION=xcb_egl
    export PATH="/root/miniconda3/bin:${PATH}"

%post
    # Prevent stop building ubuntu at time zone selection.
    export DEBIAN_FRONTEND=noninteractive
    
    # Update apt and install the necessary build dependencies
    apt-get update && \
    apt-get install -y --no-install-recommends --no-install-suggests \
        git \
        cmake \
        ninja-build \
        build-essential \
        libboost-program-options-dev \
        libboost-filesystem-dev \
        libboost-graph-dev \
        libboost-system-dev \
        libeigen3-dev \
        libflann-dev \
        libfreeimage-dev \
        libmetis-dev \
        libgoogle-glog-dev \
        libgtest-dev \
        libgmock-dev \
        libsqlite3-dev \
        libglew-dev \
        qtbase5-dev \
        libqt5opengl5-dev \
        libcgal-dev \
        libceres-dev

    # Clone COLMAP repository and build the application
    git clone https://github.com/colmap/colmap.git && \
    cd colmap && \
    git fetch https://github.com/colmap/colmap.git main && \
    git checkout FETCH_HEAD && \
    mkdir build && \
    cd build && \
    cmake .. -GNinja -DCMAKE_CUDA_ARCHITECTURES=89 \
        -DCMAKE_INSTALL_PREFIX=/colmap_installed && \
    ninja install

    # Create /usr/local and copy all built files to this directory
    mkdir -p /usr/local && cp -r /colmap_installed/* /usr/local/
    strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5

    apt-get install wget

    #Conda Installation
    apt-get update && \
    apt-get install -y wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

    arch=$(uname -m) && \
    if [ "$arch" = "x86_64" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"; \
    elif [ "$arch" = "aarch64" ]; then \
    MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"; \
    else \
    echo "Unsupported architecture: $arch"; \
    exit 1; \
    fi && \
    wget $MINICONDA_URL -O miniconda.sh && \
    bash miniconda.sh -bfp /usr/local && \
    conda config --file /.condarc --add channels defaults
    conda config --file /.condarc --add channels conda-forge
    conda update conda
    rm -f miniconda.sh

%runscript
    echo "This is a COLMAP container. To run COLMAP, use the appropriate commands."
    /usr/local/bin/colmap

%test
    # Check if COLMAP is correctly installed
    /usr/local/bin/colmap help
    conda --version
